    function_definition : def ID '(' parameter_list ')' '{' declaration_list '}'
                        | def ID '(' parameter_list ')' '{' '}'

    declaration_list : declaration
                     | declaration_list declaration

    declaration : statement
                | class_method_expression ';'

    statement : compound_statement
              | expression_statement
              | iteration_statement
              | selection_statement

    compound_statement : '{' '}'
                       | '{' statement_list '}'

    statement_list : statement
                   | statement_list statement

    expression_statement : ';'
                         | expression ';'

    expression : assignment_expression 

    assignment_expression : ID '=' initializer
                          | logical_or_expression

    logical_or_expression : logical_and_expression
                          | logical_or_expression '||' clogical_and_expression

    logical_and_expression : equality_expression
                           | logical_and_expression '&&' cequality_expression

    equality_expression : relational_expression
                        | equality_expression '==' crelational_expression
                        | equality_expression '!=' crelational_expression

    relational_expression : additive_expression
                          | relational_expression '>' cadditive_expression
                          | relational_expression '<' cadditive_expression
                          | relational_expression '>=' cadditive_expression
                          | relational_expression '<=' cadditive_expression

    additive_expression : multiplicative_expression
                        | additive_expression '+' cmultiplicative_expression
                        | additive_expression '-' cmultiplicative_expression

    multiplicative_expression : primary_expression
                              | multiplicative_expression '*' cprimary_expression
                              | multiplicative_expression '/' cprimary_expression

    initializer : ID '(' parameter_list ')'
                | primary_expression

    class_method_expression : ID DOTOPERATOR function_expression

    function_expression : ID '(' parameter_list ')'

    parameter_list : parameter_declaration
                   | parameter_list COMMA parameter_declaration
                   | 

    parameter_declaration : initializer

    primary_expression : ID
                       | STRING
                       | NUMBER
                       | point_gen
                       | '(' expression ')'

    point_gen : POINT

    iteration_statement : 'while' '(' expression ')' statement
                        | 'for' '(' expression_statement expression_statement expression ')' statement

    selection_statement : 'if' '(' expression ')' statement
                        | 'if' '(' expression ')' statement 'else' statement
